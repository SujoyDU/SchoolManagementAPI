# Generated by Django 3.1.2 on 2020-10-18 19:44

from django.conf import settings
import django.contrib.auth.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(blank=True, max_length=255, null=True)),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('course_id', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('course_name', models.CharField(max_length=255)),
                ('credits', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(12.0)])),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('dept_name', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('building', models.CharField(max_length=255)),
                ('budget', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Instructor',
            fields=[
                ('tid', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('designation', models.CharField(default='Lecturer', max_length=255)),
                ('salary', models.FloatField(validators=[django.core.validators.MinValueValidator(29000), django.core.validators.MaxValueValidator(300000)])),
                ('dept_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='instructors', to='smapi.department')),
                ('uid', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='teacher', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sec_id', models.CharField(max_length=10)),
                ('semester', models.CharField(choices=[('Fa', 'Fall'), ('Su', 'Summer'), ('Wi', 'Winter'), ('Sp', 'Spring')], default='Fall', max_length=10)),
                ('year', models.DateField(default=2020)),
                ('course_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cid', to='smapi.course')),
            ],
            options={
                'ordering': ['year'],
                'unique_together': {('course_id', 'sec_id', 'semester', 'year')},
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('sid', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('dept_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='deptstudents', to='smapi.department')),
                ('uid', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='student', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_type', models.CharField(choices=[('S', 'Student'), ('T', 'Teacher'), ('N', 'None')], default='None', max_length=10)),
                ('title', models.CharField(max_length=5)),
                ('dob', models.DateField()),
                ('address', models.CharField(max_length=255)),
                ('country', models.CharField(max_length=50)),
                ('city', models.CharField(max_length=50)),
                ('zip', models.CharField(max_length=5)),
                ('photo', models.ImageField(blank=True, upload_to='uploads')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Teaches',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('teachcourse', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='teachcourse', to='smapi.section')),
                ('tid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='teacher', to='smapi.instructor')),
            ],
        ),
        migrations.AddField(
            model_name='course',
            name='dept_name',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course', to='smapi.department'),
        ),
        migrations.CreateModel(
            name='Takes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course_status', models.CharField(choices=[('C', 'Current'), ('F', 'FAIL'), ('P', 'PASS'), ('W', 'WITHDRAW')], default='Current', max_length=10)),
                ('sid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stu', to='smapi.student')),
                ('take_course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='takeCourse', to='smapi.section')),
            ],
            options={
                'unique_together': {('sid', 'take_course')},
            },
        ),
    ]
